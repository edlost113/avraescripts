<drac2>
cc1="Rerolls"
ch=character()
D= "you can earn rerolls from studying"
if (ch.cc_exists(cc1)):
    T=f"You Already have the Counters ya goof!!"
if not (ch.cc_exists(cc1)) :
    ch.create_cc_nx(cc1, 0, 5, "none", "bubble", initial_value=0)
    T=f"{cc1} created!"

return (f'embed -title "{T}" -desc "{D}" -color <color> -thumb <image>')
</drac2>

<drac2>
ch=character()
desc = ""
fline = ""
input = "&1&".lower()
activity = "&2&".lower()
gvar = load_json(get_gvar('a8287661-1cb8-4b84-8013-1a79895405fe'))
perfectMatch = [item for item in gvar if activity == item['extracurricular'].lower()]
match = [item for item in gvar if activity in item['extracurricular'].lower()]
title = f"{ch.name} is changing their extracurricular activities"

if not &ARGS&:
    title = f"{ch.name}'s extracurricular activities"
    extracurriculars = ch.get_cvar("extracurriculars")
    extracurriculars2 = ch.get_cvar("extracurriculars2")
    desc = f"{ch.name} is currently taking part in"
    fline = "This gives them a potential bonus to"
   
    if extracurriculars:
        desc = desc + f" **{extracurriculars}**"
        perfectMatch = [item for item in gvar if extracurriculars == item['extracurricular']]
        match = [item for item in gvar if extracurriculars in item['extracurricular']]
        fline = fline + f" **{match[0]['skill1']}** and **{match[0]['skill2']}**"
    if extracurriculars2:
        if extracurriculars:    
            desc = desc + " and"
            desc = desc + f" **{extracurriculars2}**"
            fline = fline + " and also "
            perfectMatch2 = [item for item in gvar if extracurriculars2 == item['extracurricular']]
            match2 = [item for item in gvar if extracurriculars2 in item['extracurricular']]
            fline = fline + f" **{match2[0]['skill1']}** and **{match2[0]['skill2']}**"
        else:
            desc = desc + f" **{extracurriculars2}**"
            perfectMatch2 = [item for item in gvar if extracurriculars2 == item['extracurricular']]
            match2 = [item for item in gvar if extracurriculars2 in item['extracurricular']]
            fline = fline + f" **{match2[0]['skill1']}** and **{match2[0]['skill2']}**"
    if not extracurriculars and not extracurriculars2:
        desc = f"{ch.name} is not taking part in any extracurricular activities"
        fline = fline + " nothing"
elif not match:
    if input == "lookup":
        desc = f"These are the extracurricular activities that are available"
        clubs = [x['extracurricular'] for x in gvar]
        sanePriceArray = "\n"
        raw=sanePriceArray.join(clubs)
        raw=raw[:1020]+'`...' if len(raw)>1024 else raw

        fline = raw
    else:
        desc = "No extracurricular found"
elif not perfectMatch and len(match) > 1:
    if input == "lookup":
        s=[i for i in gvar if i.extracurricular.lower==activity or all([x in i.extracurricular.lower() for x in activity.split(' ')])]
        s=s[0] if s and (len(s)==1 or s[0].extracurricular.lower()==activity) else [x.extracurricular for x in gvar] if not activity else [x.extracurricular for x in s]
        sanePriceArray = "\n"
        raw=sanePriceArray.join(s)
        raw=raw[:1020]+'`...' if len(raw)>1024 else raw
        desc = f"These are the extracurricular activities that are available that contain {activity}"
        fline = raw
else:
    if input == "add":
        ch.set_cvar("extracurriculars", match[0]['extracurricular'])
        desc = f"{ch.name} has enrolled in **{match[0]['extracurricular']}**"
        fline= f"enrolling in an extracurricular activity will add bonuses to **{match[0]['skill1']}** and **{match[0]['skill2']}**"
    elif input == "add2":
        ch.set_cvar("extracurriculars2", match[0]['extracurricular'])
        desc = f"{ch.name} has enrolled in **{match[0]['extracurricular']}**"
        fline= f"enrolling in an extracurricular activity will add bonuses to **{match[0]['skill1']}** and **{match[0]['skill2']}**"
    elif input == "remove":
        ch.set_cvar("extracurriculars", "")
        desc = f"{ch.name} has unenrolled from **{match[0]['extracurricular']}**"
        fline= f"cancelling an extracurricular activity will remove the bonuses to {match[0]['skill1']} and {match[0]['skill2']}"
    elif input == "remove2":
        ch.set_cvar("extracurriculars2", "")
        desc = f"{ch.name} has unenrolled from **{match[0]['extracurricular']}**"
        fline= f"cancelling an extracurricular activity will remove the bonuses to **{match[0]['skill1']}** and **{match[0]['skill2']}**"
    elif input == "lookup":
        desc = f"**{match[0]['extracurricular']}** gives a bonus to **{match[0]['skill1']}** and **{match[0]['skill2']}**"
    else:
        desc = "Please provide add remove or lookup"
return (f'embed -title "{title}" -desc "{desc}" -f "{fline}" -footer "!extrac add/add2/remove/remove2/lookup [activity]  - made by edlost" -thumb "{ch.image}"')
</drac2>

<drac2>
ch=character()
args=argparse(&ARGS&)
person = "&1&".lower()
values = args.get('b')
if not values:
    value = 0
else:
    value = values[0]
value = int(value)
relationships = ch.get_cvar("relationships")
if not relationships:
    relationships = [{"name":f"{person}","relationship":value}]
    relationships = dump_json(relationships)
cvar_relationships = load_json(relationships)
perfectMatch = [item for item in cvar_relationships if person == item['name'].lower()]
match = [item for item in cvar_relationships if person in item['name'].lower()]
if not &ARGS&:
    desc="no args provided"
elif not perfectMatch and len(match) > 1:
    desc = f"Multiple people found with the name {person}"
elif not match:
    match = [{"name":f"{person}","relationship":0}]
    desc = f"{ch.name} has started a neutral relationship with **{match[0]['name']}**"
    cvar_relationships.append({"name":f"{person}","relationship":value})
else:
    match[0]['relationship'] += value
    cvar_relationships.remove(match[0])
    if (match[0]['relationship'] == 0):
        desc = f"{ch.name} has a neutral relationship with **{match[0]['name']}**  ({match[0]['relationship']})"
    elif (match[0]['relationship'] >= 2):
        desc = f"{ch.name} has a friendly relationship with **{match[0]['name']}**  ({match[0]['relationship']})"
    elif (match[0]['relationship'] <= -2):
        desc = f"{ch.name} has a rival relationship with **{match[0]['name']}**  ({match[0]['relationship']})"
    else:
        desc = f"{ch.name} has a neutral relationship with **{match[0]['name']}**  ({match[0]['relationship']})"
    cvar_relationships.append(match[0])

jsonOut = dump_json(cvar_relationships)
ch.set_cvar("relationships", jsonOut)
return (f'embed -title "Starhold relationships" -desc "{desc}" -footer "!rln name - made by edlost" -thumb "{ch.image}"')
</drac2>