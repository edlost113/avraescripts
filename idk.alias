<drac2>
ch=character()
extracurriculars = ch.get_cvar("extracurriculars")
extracurriculars2 = ch.get_cvar("extracurriculars2")
if not extracurriculars:
    extracurriculars = "none"
if not extracurriculars2:
    extracurriculars2 = "none"
gvar = load_json(get_gvar('a8287661-1cb8-4b84-8013-1a79895405fe'))
perfectMatch = [item for item in gvar if extracurriculars == item['extracurricular']]
match = [item for item in gvar if extracurriculars in item['extracurricular']]
perfectMatch2 = [item for item in gvar if extracurriculars2 == item['extracurricular']]
match2 = [item for item in gvar if extracurriculars2 in item['extracurricular']]
args = &ARGS&
argsP = argparse(&ARGS&)
numargs = args[0]
lenargs = len(args)
fline = ""
desc = ""
arr=[]
if not &ARGS&:
    desc="no args provided"
else:
    if not match:
        match = [{'extracurriculars':'' , 'skill1': '', 'skill2': '' }]
    if not match2:
        match2 = [{'extracurriculars':'' , 'skill1': '', 'skill2': '' }]
    if extracurriculars2=='none' and extracurriculars=='none':
        desc = f"{ch.name} is not taking part in any extracurricular activities so they will not get any bonuses"
    elif extracurriculars2=='none':
        desc = f"{ch.name} is taking part in **{extracurriculars}** which gives them a bonus to **{match[0]['skill1']}** and **{match[0]['skill2']}**"
    elif extracurriculars=='none':
        desc = f"{ch.name} is taking part in **{extracurriculars2}** which gives them a bonus to **{match2[0]['skill1']}** and **{match2[0]['skill2']}**"
    else:
        desc = f"{ch.name} is taking part in **{extracurriculars}** and **{extracurriculars2}** which gives them a bonus to **{match[0]['skill1']}**, **{match[0]['skill2']}**, **{match2[0]['skill1']}** and **{match2[0]['skill2']}**"
    numPasses = 0
    bonus = argsP.last('b',default="0")
    for i in range(1,int(numargs)+1):
        skill = ([x for x,y in ch.skills if args[i].lower().replace(' ','') in x.lower()]+['perception'])[0]
        adv = argsP.adv(boolwise=True)
        hasSkill = False
        if skill == match[0]['skill1'].lower().replace(' ',''):
            hasSkill = True
        elif skill == match[0]['skill2'].lower().replace(' ',''):
            hasSkill = True
        elif skill == match2[0]['skill1'].lower().replace(' ',''):
            hasSkill = True
        elif skill == match2[0]['skill2'].lower().replace(' ',''):
            hasSkill = True
        # grab the reroll number if the character has the csetting reroll or default to None
        reroll_number = ch.csettings.get("reroll", None)
        # grab a minimum from our args like a standard !check, (-mc #) or set it to 10 if the character has the csetting 'talent' set to True and has proficiency or expertise in the chosen skill.
        minimum_check = argsP.last('mc', None, int) or (10 if ch.csettings.get("talent", False) and ch.skills[skill].prof>=1 else None)
        if bonus == "0":
            r = vroll(ch.skills[skill].d20(adv, reroll_number, minimum_check))
        else:
            r = vroll(ch.skills[skill].d20(adv, reroll_number, minimum_check)+"+"+bonus)
        dc = get_svar('exam_dc',default=0)
        showdc = False
        if dc == 0:
            dc = argsP.last('dc', default=0)
            if dc != 0:
                showdc = True
        if dc != 0:
            if int(r.total) >= int(dc):
                fline = f"you used **{skill.upper()}** and got {r.result} on the test which **PASSED** this portion of the exam"
                numPasses += 1
            else:
                if hasSkill:
                    fline = f"you used **{skill.upper()}** and got {r.result} on the test which **FAILED** this portion of the exam, maybe roll one of your Student dice to add a bonus"
                else:
                    fline = f"you used **{skill.upper()}** and got {r.result} on the test which **FAILED** this portion of the exam"
        else:
            fline = f"you used **{skill.upper()}** and got {r.result} on the test"
        arr.append(fline)
    arr = arr[0:len(arr)]
    arr = '\n'.join(arr)

return (f'embed -title "{ch.name}" -desc "{desc}" -f "{arr}" -f "**Total Passes: {numPasses}**" -footer "!exam # skill skill - made by edlost" -thumb "{ch.image}"')
</drac2>